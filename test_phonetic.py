#!/usr/bin/env python3
"""
Script de prueba para verificar la funcionalidad de transcripci√≥n fon√©tica IPA RP.
"""

from src.core.factories.translator_factory import create_translator_app

def test_phonetic_transcription():
    """Prueba la funcionalidad de transcripci√≥n fon√©tica"""
    
    print("=== Prueba de Transcripci√≥n Fon√©tica IPA RP ===\n")
    
    # Crear la aplicaci√≥n
    app = create_translator_app("en")
    
    # Verificar que la transcripci√≥n fon√©tica est√© disponible
    if not app.is_phonetic_transcription_available():
        print("‚ùå La transcripci√≥n fon√©tica no est√° disponible")
        return
    
    print("‚úÖ Transcripci√≥n fon√©tica disponible")
    print(f"üé≠ Acentos soportados: {app.get_supported_accents()}")
    print(f"üéØ Acento actual: {app.accent}")
    print()
    
    # Palabras de prueba que son comunes en el diccionario Longman
    test_words = [
        "hello",
        "world", 
        "university",
        "pronunciation",
        "phonetic",
        "received",
        "British",
        "standard",
        "dictionary"
    ]
    
    print("üî§ Probando transcripci√≥n de palabras:")
    print("-" * 50)
    
    for word in test_words:
        try:
            transcription = app.transcribe_to_ipa(word)
            print(f"{word:15} ‚Üí {transcription}")
        except Exception as e:
            print(f"{word:15} ‚Üí Error: {e}")
    
    print()
    
    # Probar con una frase completa
    test_sentence = "Hello world, this is a phonetic transcription test."
    print("üìù Probando transcripci√≥n de frase:")
    print("-" * 50)
    print(f"Original: {test_sentence}")
    
    try:
        sentence_transcription = app.transcribe_to_ipa(test_sentence)
        print(f"IPA (RP): {sentence_transcription}")
    except Exception as e:
        print(f"Error: {e}")
    
    print()
    print("=== Fin de la prueba ===")

if __name__ == "__main__":
    test_phonetic_transcription()